{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\components\\\\InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormControl, FormLabel, Input, FormErrorMessage } from '@chakra-ui/core';\nimport { useField } from 'formik';\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    placeholder: props.placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"E2Ps/Wxn5Vr7Iec8yl5nZ8hmXyg=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","Input","FormErrorMessage","useField","InputField","label","_","size","props","field","error","name","placeholder"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,gBAAxC,QAAgE,iBAAhE;AACA,SAASC,QAAT,QAAyB,QAAzB;AAOA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAAgC;AAAA;;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAjBC,CAAiB,QAAvBC,IAAuB;AAAA,MAAXC,KAAW;;AAAA,kBACxDL,QAAQ,CAACK,KAAD,CADgD;AAAA;AAAA,MAC1EC,KAD0E;AAAA,MAClEC,KADkE,iBAClEA,KADkE;;AAE7E,SACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,KAAjC,CADJ,EAEI,MAAC,KAAD,eAAWI,KAAX,EAAsBD,KAAtB;AAA6B,IAAA,EAAE,EAAEC,KAAK,CAACE,IAAvC;AAA6C,IAAA,WAAW,EAAEH,KAAK,CAACI,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGKF,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH5D,CADJ;AAOP,CATM;;GAAMN,U;UACgBD,Q;;;KADhBC,U","sourcesContent":["import React, { InputHTMLAttributes } from 'react'\r\nimport { FormControl, FormLabel, Input, FormErrorMessage } from '@chakra-ui/core';\r\nimport { useField } from 'formik';\r\n\r\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\r\n    label: string;\r\n    name: string;\r\n}\r\n\r\nexport const InputField: React.FC<InputFieldProps> = ({label, size: _, ...props}) => {\r\n    const [field, {error}] = useField(props);\r\n        return (\r\n            <FormControl isInvalid={!!error}>\r\n                <FormLabel htmlFor={field.name}>{label}</FormLabel>\r\n                <Input {...field} {...props} id={field.name} placeholder={props.placeholder} />\r\n                {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n            </FormControl>\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}