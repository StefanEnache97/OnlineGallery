{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nexport const ForgotPassword = ({}) => {\n  const [, forgotPassword] = useForgotPasswordMutation();\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: async values => {\n      await forgotPassword(values);\n      setComplete(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => complete ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"If an account with that email exists, we sent you an email\") : __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"email\",\n    placeholder: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Forgot Password\"))));\n};\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/forgot-password.tsx"],"names":["Box","Button","Formik","Form","withUrqlClient","React","useState","InputField","Wrapper","createUrqlClient","useForgotPasswordMutation","ForgotPassword","forgotPassword","complete","setComplete","email","values","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAGA,SAASC,yBAAT,QAA0C,sBAA1C;AAEA,OAAO,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAQ;AAClD,QAAM,GAAGC,cAAH,IAAqBF,yBAAyB,EAApD;AACA,QAAM;AAAA,OAACG,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC1B,YAAMJ,cAAc,CAACI,MAAD,CAApB;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAAC;AAAEG,IAAAA;AAAF,GAAD,KACCJ,QAAQ,GACN,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADM,GAKN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAEI,YAHb;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,CAbN,CADF,CADF;AAqCD,CAxCM;AA0CP,eAAeb,cAAc,CAACK,gBAAD,CAAd,CAAiCE,cAAjC,CAAf","sourcesContent":["import { Box, Flex, Link, Button } from \"@chakra-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport React, { useState } from \"react\";\r\nimport { InputField } from \"../components/InputField\";\r\nimport { Wrapper } from \"../components/Wrapper\";\r\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\r\nimport { toErrorMap } from \"../utils/toErrorMap\";\r\nimport login from \"./login\";\r\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\r\n\r\nexport const ForgotPassword: React.FC<{}> = ({}) => {\r\n  const [, forgotPassword] = useForgotPasswordMutation();\r\n  const [complete, setComplete] = useState(false);\r\n  return (\r\n    <Wrapper variant=\"small\">\r\n      <Formik\r\n        initialValues={{ email: \"\" }}\r\n        onSubmit={async (values) => {\r\n          await forgotPassword(values);\r\n          setComplete(true);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) =>\r\n          complete ? (\r\n            <Box>\r\n              If an account with that email exists, we sent you an email\r\n            </Box>\r\n          ) : (\r\n            <Form>\r\n              <InputField\r\n                name=\"email\"\r\n                placeholder=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n              />\r\n\r\n              <Button\r\n                mt={4}\r\n                type=\"submit\"\r\n                isLoading={isSubmitting}\r\n                variantColor=\"teal\"\r\n              >\r\n                Forgot Password\r\n              </Button>\r\n            </Form>\r\n          )\r\n        }\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}