{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\components\\\\EditDeletePostButtons.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, IconButton, Link } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport NextLink from \"next/link\";\nimport { useDeletePostMutation, useMeQuery } from \"../generated/graphql\";\nexport var EditDeletePostButtons = function EditDeletePostButtons(_ref) {\n  _s();\n\n  var _meData$me;\n\n  var id = _ref.id,\n      creatorId = _ref.creatorId;\n\n  var _useDeletePostMutatio = useDeletePostMutation(),\n      _useDeletePostMutatio2 = _slicedToArray(_useDeletePostMutatio, 2),\n      deletePost = _useDeletePostMutatio2[1];\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      meData = _useMeQuery2[0].data;\n\n  if ((meData === null || meData === void 0 ? void 0 : (_meData$me = meData.me) === null || _meData$me === void 0 ? void 0 : _meData$me.id) !== creatorId) {\n    return null;\n  }\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(NextLink, {\n    href: \"/post/edit/[id]\",\n    as: \"/post/edit/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    as: Link,\n    mr: 4,\n    icon: \"edit\",\n    \"aria-label\": \"Edit Post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), __jsx(IconButton, {\n    icon: \"delete\",\n    \"aria-label\": \"Delete Post\",\n    onClick: function onClick() {\n      deletePost({\n        id: id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(EditDeletePostButtons, \"z5f2zd+QGw9yUjzE1BdNENq0zaM=\", false, function () {\n  return [useDeletePostMutation, useMeQuery];\n});\n\n_c = EditDeletePostButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeletePostButtons\");","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/components/EditDeletePostButtons.tsx"],"names":["Box","IconButton","Link","React","NextLink","useDeletePostMutation","useMeQuery","EditDeletePostButtons","id","creatorId","deletePost","meData","data","me"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,iBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,qBAAT,EAAgCC,UAAhC,QAAkD,sBAAlD;AAOA,OAAO,IAAMC,qBAA2D,GAAG,SAA9DA,qBAA8D,OAGrE;AAAA;;AAAA;;AAAA,MAFJC,EAEI,QAFJA,EAEI;AAAA,MADJC,SACI,QADJA,SACI;;AAAA,8BACmBJ,qBAAqB,EADxC;AAAA;AAAA,MACKK,UADL;;AAAA,oBAEuBJ,UAAU,EAFjC;AAAA;AAAA,MAEWK,MAFX,mBAEKC,IAFL;;AAIJ,MAAI,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,0BAAAA,MAAM,CAAEE,EAAR,0DAAYL,EAAZ,MAAmBC,SAAvB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,iBAAf;AAAiC,IAAA,EAAE,uBAAgBD,EAAhB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,EAAE,EAAEN,IADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,kBAAW,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,kBAAW,aAFb;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbQ,MAAAA,UAAU,CAAC;AAAEF,QAAAA,EAAE,EAAFA;AAAF,OAAD,CAAV;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAoBD,CA/BM;;GAAMD,qB;UAIYF,qB,EACIC,U;;;KALhBC,qB","sourcesContent":["import { Box, IconButton, Link } from \"@chakra-ui/core\";\r\nimport React from \"react\";\r\nimport NextLink from \"next/link\";\r\nimport { useDeletePostMutation, useMeQuery } from \"../generated/graphql\";\r\n\r\ninterface EditDeletePostButtonsProps {\r\n  id: number;\r\n  creatorId: number;\r\n}\r\n\r\nexport const EditDeletePostButtons: React.FC<EditDeletePostButtonsProps> = ({\r\n  id,\r\n  creatorId,\r\n}) => {\r\n  const [, deletePost] = useDeletePostMutation();\r\n  const [{ data: meData }] = useMeQuery();\r\n\r\n  if (meData?.me?.id !== creatorId) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <NextLink href=\"/post/edit/[id]\" as={`/post/edit/${id}`}>\r\n        <IconButton\r\n          as={Link}\r\n          mr={4}\r\n          icon=\"edit\"\r\n          aria-label=\"Edit Post\"\r\n        ></IconButton>\r\n      </NextLink>\r\n\r\n      <IconButton\r\n        icon=\"delete\"\r\n        aria-label=\"Delete Post\"\r\n        onClick={() => {\r\n          deletePost({ id });\r\n        }}\r\n      ></IconButton>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}