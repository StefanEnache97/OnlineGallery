{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\post\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Layout } from \"../../components/Layout\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\nexport const Post = ({}) => {\n  var _data$post;\n\n  const router = useRouter();\n  const intId = typeof router.query.id === \"string\" ? parseInt(router.query.id) : -1;\n  const [{\n    data,\n    error,\n    fetching\n  }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n\n  if (fetching) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, error.message);\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.text);\n};\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Post);","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/post/[id].tsx"],"names":["withUrqlClient","useRouter","React","Layout","usePostQuery","createUrqlClient","Post","router","intId","query","id","parseInt","data","error","fetching","pause","variables","message","post","text","ssr"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC,EAAD,KAAQ;AAAA;;AAC1B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAEA,QAAM,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,IAA8BV,YAAY,CAAC;AAC/CW,IAAAA,KAAK,EAAEP,KAAK,KAAK,CAAC,CAD6B;AAE/CQ,IAAAA,SAAS,EAAE;AACTN,MAAAA,EAAE,EAAEF;AADK;AAFoC,GAAD,CAAhD;;AAMA,MAAIM,QAAJ,EAAc;AACZ,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,MAAID,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACI,OAAZ,CAAP;AACD;;AACD,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,IAAT,aAASA,IAAT,qCAASA,IAAI,CAAEM,IAAf,+CAAS,WAAYC,IAArB,CAAP;AACD,CAtBM;AAwBP,eAAenB,cAAc,CAACK,gBAAD,EAAmB;AAAEe,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDd,IAAhD,CAAf","sourcesContent":["import { withUrqlClient } from \"next-urql\";\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { usePostQuery } from \"../../generated/graphql\";\r\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\r\n\r\nexport const Post = ({}) => {\r\n  const router = useRouter();\r\n  const intId =\r\n    typeof router.query.id === \"string\" ? parseInt(router.query.id) : -1;\r\n  const [{ data, error, fetching }] = usePostQuery({\r\n    pause: intId === -1,\r\n    variables: {\r\n      id: intId,\r\n    },\r\n  });\r\n  if (fetching) {\r\n    return (\r\n      <Layout>\r\n        <div>Loading...</div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n  return <Layout>{data?.post?.text}</Layout>;\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Post);\r\n"]},"metadata":{},"sourceType":"module"}