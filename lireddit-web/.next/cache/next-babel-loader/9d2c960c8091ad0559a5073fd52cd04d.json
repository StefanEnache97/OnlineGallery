{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\post\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Layout } from \"../../components/Layout\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\nexport const Post = ({}) => {\n  const router = useRouter();\n  const intId = typeof router.query.id === \"string\" ? parseInt(router.query.id) : -1;\n  const [{\n    data,\n    error,\n    fetching\n  }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n\n  let _caches = caches.keys();\n\n  if (fetching) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, error.message);\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.post)) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Could not find post\"));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    mb: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, data.post.title), data.post.text, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, data.post.voteStatus === null ? \"\" : `${data.post.voteStatus}`, _caches));\n};\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Post);","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/post/[id].tsx"],"names":["Box","Heading","withUrqlClient","useRouter","React","Layout","usePostQuery","createUrqlClient","Post","router","intId","query","id","parseInt","data","error","fetching","pause","variables","_caches","caches","keys","message","post","title","text","voteStatus","ssr"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC,EAAD,KAAQ;AAC1B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAEA,QAAM,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,IAA8BV,YAAY,CAAC;AAC/CW,IAAAA,KAAK,EAAEP,KAAK,KAAK,CAAC,CAD6B;AAE/CQ,IAAAA,SAAS,EAAE;AACTN,MAAAA,EAAE,EAAEF;AADK;AAFoC,GAAD,CAAhD;;AAOA,MAAIS,OAAO,GAAGC,MAAM,CAACC,IAAP,EAAd;;AACA,MAAIL,QAAJ,EAAc;AACZ,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,MAAID,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACO,OAAZ,CAAP;AACD;;AAED,MAAI,EAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,IAAP,CAAJ,EAAiB;AACf,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAKD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBT,IAAI,CAACS,IAAL,CAAUC,KAA3B,CADF,EAEGV,IAAI,CAACS,IAAL,CAAUE,IAFb,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,CAACS,IAAL,CAAUG,UAAV,KAAyB,IAAzB,GAAgC,EAAhC,GAAsC,GAAEZ,IAAI,CAACS,IAAL,CAAUG,UAAW,EADhE,EAEGP,OAFH,CAHF,CADF;AAUD,CAzCM;AA2CP,eAAejB,cAAc,CAACK,gBAAD,EAAmB;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDnB,IAAhD,CAAf","sourcesContent":["import { Box, Heading } from \"@chakra-ui/core\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Layout } from \"../../components/Layout\";\r\nimport { usePostQuery } from \"../../generated/graphql\";\r\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\r\n\r\nexport const Post = ({}) => {\r\n  const router = useRouter();\r\n  const intId =\r\n    typeof router.query.id === \"string\" ? parseInt(router.query.id) : -1;\r\n  const [{ data, error, fetching }] = usePostQuery({\r\n    pause: intId === -1,\r\n    variables: {\r\n      id: intId,\r\n    },\r\n  });\r\n\r\n  let _caches = caches.keys();\r\n  if (fetching) {\r\n    return (\r\n      <Layout>\r\n        <div>Loading...</div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  if (!data?.post) {\r\n    return (\r\n      <Layout>\r\n        <Box>Could not find post</Box>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Heading mb={4}>{data.post.title}</Heading>\r\n      {data.post.text}\r\n      <div>\r\n        {data.post.voteStatus === null ? \"\" : `${data.post.voteStatus}`}\r\n        {_caches}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Post);\r\n"]},"metadata":{},"sourceType":"module"}