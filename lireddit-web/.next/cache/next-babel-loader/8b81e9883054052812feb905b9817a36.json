{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\components\\\\NavBar.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, Link, Flex, Button } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\nexport const NavBar = ({}) => {\n  const [{\n    fetching: logoutFetching\n  }, logout] = useLogoutMutation();\n  const [{\n    data,\n    fetching\n  }] = useMeQuery({\n    pause: isServer()\n  });\n  let body = null; //data is loading\n\n  if (fetching) {\n    body = null;\n  } //user not logged in\n  else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n      body = __jsx(React.Fragment, null, __jsx(NextLink, {\n        href: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        color: \"white\",\n        mr: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, \"Login\")), __jsx(NextLink, {\n        href: \"/register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"Register\")));\n    } //user is logged in\n    else {\n        body = __jsx(Flex, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }\n        }, __jsx(Box, {\n          mr: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, data.me.username), __jsx(Button, {\n          onClick: () => {\n            logout();\n          },\n          isLoading: logoutFetching,\n          variant: \"link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, \"logout\"));\n      }\n\n  return __jsx(Flex, {\n    position: \"sticky\",\n    top: 0,\n    bg: \"tan\",\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    ml: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, body));\n};","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","NextLink","useMeQuery","useLogoutMutation","isServer","NavBar","fetching","logoutFetching","logout","data","pause","body","me","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,sBAA9C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAIA,OAAO,MAAMC,MAA6B,GAAG,CAAC,EAAD,KAAQ;AACnD,QAAM,CAAC;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GAAD,EAA+BC,MAA/B,IAAyCL,iBAAiB,EAAhE;AACA,QAAM,CAAC;AAAEM,IAAAA,IAAF;AAAQH,IAAAA;AAAR,GAAD,IAAuBJ,UAAU,CAAC;AACtCQ,IAAAA,KAAK,EAAEN,QAAQ;AADuB,GAAD,CAAvC;AAGA,MAAIO,IAAI,GAAG,IAAX,CALmD,CAOnD;;AACA,MAAIL,QAAJ,EAAc;AACZK,IAAAA,IAAI,GAAG,IAAP;AACD,GAFD,CAGA;AAHA,OAIK,IAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,CAAJ,EAAe;AAClBD,MAAAA,IAAI,GACF,4BACE,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAME,MAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,CADF;AAYD,KAbI,CAcL;AAdK,SAeA;AACHA,QAAAA,IAAI,GACF,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,IAAI,CAACG,EAAL,CAAQC,QAArB,CADF,EAEE,MAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,MAAM;AACP,WAHH;AAIE,UAAA,SAAS,EAAED,cAJb;AAKE,UAAA,OAAO,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAcD;;AACD,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAC,KAAnC;AAAyC,IAAA,CAAC,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBI,IAAlB,CADF,CADF;AAKD,CAhDM","sourcesContent":["import React from \"react\";\r\nimport { Box, Link, Flex, Button } from \"@chakra-ui/core\";\r\nimport NextLink from \"next/link\";\r\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\r\nimport { isServer } from \"../utils/isServer\";\r\n\r\ninterface NavBarProps {}\r\n\r\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\r\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\r\n  const [{ data, fetching }] = useMeQuery({\r\n    pause: isServer(),\r\n  });\r\n  let body = null;\r\n\r\n  //data is loading\r\n  if (fetching) {\r\n    body = null;\r\n  }\r\n  //user not logged in\r\n  else if (!data?.me) {\r\n    body = (\r\n      <>\r\n        <NextLink href=\"/login\">\r\n          <Link color=\"white\" mr={2}>\r\n            Login\r\n          </Link>\r\n        </NextLink>\r\n        <NextLink href=\"/register\">\r\n          <Link color=\"white\">Register</Link>\r\n        </NextLink>\r\n      </>\r\n    );\r\n  }\r\n  //user is logged in\r\n  else {\r\n    body = (\r\n      <Flex>\r\n        <Box mr={2}>{data.me.username}</Box>\r\n        <Button\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n          isLoading={logoutFetching}\r\n          variant=\"link\"\r\n        >\r\n          logout\r\n        </Button>\r\n      </Flex>\r\n    );\r\n  }\r\n  return (\r\n    <Flex position=\"sticky\" top={0} bg=\"tan\" p={4}>\r\n      <Box ml={\"auto\"}>{body}</Box>\r\n    </Flex>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}