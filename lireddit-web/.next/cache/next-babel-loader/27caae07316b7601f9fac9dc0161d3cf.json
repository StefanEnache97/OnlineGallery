{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\register.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nexport const Register = ({}) => {\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    handleChange\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Username\"), __jsx(Input, {\n    value: values.username,\n    onChange: handleChange,\n    id: \"username\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })))));\n};\nexport default Register;","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/register.tsx"],"names":["React","Formik","Form","FormControl","FormLabel","Input","Wrapper","Register","username","password","values","console","log","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,QAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,QAAgE,iBAAhE;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAQA,OAAO,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AACjD,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC;AAAEA,IAAAA,MAAF;AAAUG,IAAAA;AAAV,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACF,QADhB;AAEE,IAAA,QAAQ,EAAEK,YAFZ;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAPJ,CADF,CADF;AAyBP,CA1BM;AA4BP,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport { FormControl, FormLabel, Input, FormErrorMessage } from '@chakra-ui/core';\r\nimport { Wrapper } from '../components/Wrapper';\r\n\r\ninterface registerProps {\r\n\r\n}\r\n\r\n    \r\n\r\nexport const Register: React.FC<registerProps> = ({}) => {\r\n        return (\r\n          <Wrapper>\r\n            <Formik\r\n              initialValues={{ username: \"\", password: \"\" }}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n              }}\r\n            >\r\n              {({ values, handleChange }) => (\r\n                <Form>\r\n                  <FormControl>\r\n                    <FormLabel htmlFor=\"username\">Username</FormLabel>\r\n                    <Input\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      id=\"username\"\r\n                      placeholder=\"username\"\r\n                    />\r\n                    {/* <FormErrorMessage>{form.errors.name}</FormErrorMessage> */}\r\n                  </FormControl>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Wrapper>\r\n        );\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}