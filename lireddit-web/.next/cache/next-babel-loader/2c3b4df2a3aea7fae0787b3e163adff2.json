{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\login.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button, Link } from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\nexport const Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        //worked\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"usernameOrEmail\",\n    placeholder: \"username or email\",\n    label: \"Username or Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"password\",\n    placeholder: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), __jsx(Box, {\n    ml: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(NextLink, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\"))), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"login\"))));\n};\nexport default withUrqlClient(createUrqlClient)(Login);","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/login.tsx"],"names":["React","Formik","Form","Box","Button","Link","Wrapper","InputField","useLoginMutation","toErrorMap","useRouter","withUrqlClient","createUrqlClient","NextLink","Login","router","login","usernameOrEmail","password","values","setErrors","response","data","errors","user","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAA8BC,gBAA9B,QAAsD,sBAAtD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,MAAMC,KAAmB,GAAG,CAAC,EAAD,KAAQ;AACzC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,GAAGM,KAAH,IAAYR,gBAAgB,EAAlC;AACA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAES,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeN,KAAf,CAAqBO,MAAzB,EAAiC;AAC/BH,QAAAA,SAAS,CAACX,UAAU,CAACY,QAAQ,CAACC,IAAT,CAAcN,KAAd,CAAoBO,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeN,KAAf,CAAqBQ,IAAzB,EAA+B;AACpC;AACAT,QAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CAdF,EAmBE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAEA,YAHb;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CAbJ,CADF,CADF;AA+CD,CAlDM;AAoDP,eAAef,cAAc,CAACC,gBAAD,CAAd,CAAiCE,KAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Box, Button, Link } from \"@chakra-ui/core\";\r\nimport { Wrapper } from \"../components/Wrapper\";\r\nimport { InputField } from \"../components/InputField\";\r\nimport { useMutation } from \"urql\";\r\nimport { useRegisterMutation, useLoginMutation } from \"../generated/graphql\";\r\nimport { toErrorMap } from \"../utils/toErrorMap\";\r\nimport { useRouter } from \"next/router\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\r\nimport NextLink from \"next/link\";\r\n\r\nexport const Login: React.FC<{}> = ({}) => {\r\n  const router = useRouter();\r\n  const [, login] = useLoginMutation();\r\n  return (\r\n    <Wrapper variant=\"small\">\r\n      <Formik\r\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\r\n        onSubmit={async (values, { setErrors }) => {\r\n          const response = await login(values);\r\n          if (response.data?.login.errors) {\r\n            setErrors(toErrorMap(response.data.login.errors));\r\n          } else if (response.data?.login.user) {\r\n            //worked\r\n            router.push(\"/\");\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <InputField\r\n              name=\"usernameOrEmail\"\r\n              placeholder=\"username or email\"\r\n              label=\"Username or Email\"\r\n            />\r\n            <Box mt={4}>\r\n              <InputField\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n              />\r\n            </Box>\r\n            <Box ml=\"auto\">\r\n              <NextLink href=\"/forgot-password\">\r\n                <Link>Forgot Password?</Link>\r\n              </NextLink>\r\n            </Box>\r\n            <Button\r\n              mt={4}\r\n              type=\"submit\"\r\n              isLoading={isSubmitting}\r\n              variantColor=\"teal\"\r\n            >\r\n              login\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient)(Login);\r\n"]},"metadata":{},"sourceType":"module"}