{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\change-password\\\\[token].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Link } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport NextLink from \"next/link\";\nexport var ChangePassword = function ChangePassword(_ref) {\n  _s();\n\n  var token = _ref.token;\n  var router = useRouter();\n\n  var _useChangePasswordMut = useChangePasswordMutation(),\n      _useChangePasswordMut2 = _slicedToArray(_useChangePasswordMut, 2),\n      changePassword = _useChangePasswordMut2[1];\n\n  var _useState = useState(\"\"),\n      tokenError = _useState[0],\n      setTokenError = _useState[1];\n\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response, errorMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return changePassword({\n                  newPassword: values.newPassword,\n                  token: token\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n                  errorMap = toErrorMap(response.data.changePassword.errors);\n\n                  if (\"token\" in errorMap) {\n                    setTokenError(errorMap.token);\n                  }\n\n                  setErrors(errorMap);\n                } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n                  //worked\n                  router.push(\"/\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, __jsx(InputField, {\n      name: \"newPassword\",\n      placeholder: \"enter a new password\",\n      label: \"New Password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), tokenError ? __jsx(Flex, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(Box, {\n      mr: 2,\n      style: {\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, tokenError), __jsx(NextLink, {\n      href: \"/forgot-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, \"go forget it again\"))) : null, __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"change password\"));\n  }));\n};\n\n_s(ChangePassword, \"uUGG1qrP2/K7ETkw6qD8KF59IW8=\", false, function () {\n  return [useRouter, useChangePasswordMutation];\n});\n\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref5) {\n  var query = _ref5.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/change-password/[token].tsx"],"names":["Box","Button","Flex","Link","Formik","Form","withUrqlClient","useRouter","React","useState","InputField","Wrapper","useChangePasswordMutation","createUrqlClient","toErrorMap","NextLink","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","response","data","errors","errorMap","user","push","isSubmitting","color","getInitialProps","query"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Link } from \"@chakra-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { NextPage } from \"next\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { InputField } from \"../../components/InputField\";\r\nimport { Wrapper } from \"../../components/Wrapper\";\r\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\r\nimport { createUrqlClient } from \"../../utils/createUrqlClient\";\r\nimport { toErrorMap } from \"../../utils/toErrorMap\";\r\nimport NextLink from \"next/link\";\r\n\r\nexport const ChangePassword: NextPage<{ token: string }> = ({ token }) => {\r\n  const router = useRouter();\r\n  const [, changePassword] = useChangePasswordMutation();\r\n  const [tokenError, setTokenError] = useState(\"\");\r\n  return (\r\n    <Wrapper variant=\"small\">\r\n      <Formik\r\n        initialValues={{ newPassword: \"\" }}\r\n        onSubmit={async (values, { setErrors }) => {\r\n          const response = await changePassword({\r\n            newPassword: values.newPassword,\r\n            token,\r\n          });\r\n          if (response.data?.changePassword.errors) {\r\n            const errorMap = toErrorMap(response.data.changePassword.errors);\r\n            if (\"token\" in errorMap) {\r\n              setTokenError(errorMap.token);\r\n            }\r\n            setErrors(errorMap);\r\n          } else if (response.data?.changePassword.user) {\r\n            //worked\r\n            router.push(\"/\");\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <InputField\r\n              name=\"newPassword\"\r\n              placeholder=\"enter a new password\"\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n            />\r\n            {tokenError ? (\r\n              <Flex>\r\n                <Box mr={2} style={{ color: \"red\" }}>\r\n                  {tokenError}\r\n                </Box>\r\n                <NextLink href=\"/forgot-password\">\r\n                  <Link>go forget it again</Link>\r\n                </NextLink>\r\n              </Flex>\r\n            ) : null}\r\n            <Button\r\n              mt={4}\r\n              type=\"submit\"\r\n              isLoading={isSubmitting}\r\n              variantColor=\"teal\"\r\n            >\r\n              change password\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nChangePassword.getInitialProps = ({ query }) => {\r\n  return {\r\n    token: query.token as string,\r\n  };\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\r\n"]},"metadata":{},"sourceType":"module"}