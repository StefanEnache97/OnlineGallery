{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\create-post.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { Layout } from \"../components/Layout\";\n\nconst CreatePost = ({}) => {\n  const router = useRouter();\n  const [, createPost] = useCreatePostMutation();\n  return __jsx(Layout, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: \"\",\n      text: \"\"\n    },\n    onSubmit: async values => {\n      const {\n        error\n      } = await createPost({\n        input: values\n      });\n\n      if (!error) {\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"title\",\n    placeholder: \"title\",\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    textarea: true,\n    name: \"text\",\n    placeholder: \"text...\",\n    label: \"Body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Create Post\"))));\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/create-post.tsx"],"names":["Box","Button","Form","Formik","React","InputField","useCreatePostMutation","useRouter","withUrqlClient","createUrqlClient","Layout","CreatePost","router","createPost","title","text","values","error","input","push","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,UAAwB,GAAG,CAAC,EAAD,KAAQ;AACvC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,GAAGM,UAAH,IAAiBP,qBAAqB,EAA5C;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEQ,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KADjB;AAEE,IAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAY,MAAMJ,UAAU,CAAC;AAAEK,QAAAA,KAAK,EAAEF;AAAT,OAAD,CAAlC;;AAEA,UAAI,CAACC,KAAL,EAAY;AACVL,QAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACD;AACF,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,WAAW,EAAC,OAArC;AAA6C,IAAA,KAAK,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAWE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAEA,YAHb;AAIE,IAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CAXJ,CADF,CADF;AAqCD,CAxCD;;AA0CA,eAAeZ,cAAc,CAACC,gBAAD,CAAd,CAAiCE,UAAjC,CAAf","sourcesContent":["import { Box, Button } from \"@chakra-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { InputField } from \"../components/InputField\";\r\nimport { Wrapper } from \"../components/Wrapper\";\r\nimport { useCreatePostMutation } from \"../generated/graphql\";\r\nimport { useRouter } from \"next/router\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\r\nimport { Layout } from \"../components/Layout\";\r\n\r\nconst CreatePost: React.FC<{}> = ({}) => {\r\n  const router = useRouter();\r\n  const [, createPost] = useCreatePostMutation();\r\n  return (\r\n    <Layout variant=\"small\">\r\n      <Formik\r\n        initialValues={{ title: \"\", text: \"\" }}\r\n        onSubmit={async (values) => {\r\n          const { error } = await createPost({ input: values });\r\n\r\n          if (!error) {\r\n            router.push(\"/\");\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <InputField name=\"title\" placeholder=\"title\" label=\"Title\" />\r\n            <Box mt={4}>\r\n              <InputField\r\n                textarea\r\n                name=\"text\"\r\n                placeholder=\"text...\"\r\n                label=\"Body\"\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              mt={4}\r\n              type=\"submit\"\r\n              isLoading={isSubmitting}\r\n              variantColor=\"teal\"\r\n            >\r\n              Create Post\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withUrqlClient(createUrqlClient)(CreatePost);\r\n"]},"metadata":{},"sourceType":"module"}