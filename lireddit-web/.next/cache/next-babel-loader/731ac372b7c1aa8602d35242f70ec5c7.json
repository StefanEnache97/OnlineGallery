{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\FullstackReact\\\\lireddit-web\\\\src\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from \"@chakra-ui/core\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextLink from \"next/link\";\nimport React, { useState } from \"react\";\nimport { EditDeletePostButtons } from \"../components/EditDeletePostButtons\";\nimport { Layout } from \"../components/Layout\";\nimport { UpdootSection } from \"../components/UpdootSection\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState({\n    limit: 15,\n    cursor: null\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _usePostsQuery = usePostsQuery({\n    variables: variables\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      error = _usePostsQuery2$.error,\n      fetching = _usePostsQuery2$.fetching;\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \" query failed for some reason\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, !data && fetching ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(function (p) {\n    return !p ? null : __jsx(Flex, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, __jsx(UpdootSection, {\n      post: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      flex: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/[id]\",\n      as: \"/post/\".concat(p.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(Heading, {\n      fontSize: \"xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, p.title))), __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \"posted by \", p.creator.username), __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, __jsx(Text, {\n      flex: 1,\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, p.textSnippet), __jsx(EditDeletePostButtons, {\n      id: p.id,\n      creatorId: p.creator.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }))));\n  })), data && data.posts.hasMore ? __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    isLoading: fetching,\n    m: \"auto\",\n    my: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"load more\")) : null);\n};\n\n_s(Index, \"yBIEWDeJPuWMBgyQVLQIn5VliaM=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/User/FullstackReact/lireddit-web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","withUrqlClient","NextLink","React","useState","EditDeletePostButtons","Layout","UpdootSection","usePostsQuery","createUrqlClient","Index","limit","cursor","variables","setVariables","data","error","fetching","message","posts","map","p","id","title","creator","username","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from \"@chakra-ui/core\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextLink from \"next/link\";\nimport React, { useState } from \"react\";\nimport { EditDeletePostButtons } from \"../components/EditDeletePostButtons\";\nimport { Layout } from \"../components/Layout\";\nimport { UpdootSection } from \"../components/UpdootSection\";\nimport { useMeQuery, usePostsQuery } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst Index = () => {\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  });\n\n  const [{ data, error, fetching }] = usePostsQuery({\n    variables,\n  });\n\n  if (!fetching && !data) {\n    return (\n      <div>\n        <div> query failed for some reason</div>\n        <div>{error?.message}</div>\n      </div>\n    );\n  }\n  return (\n    <Layout>\n      {!data && fetching ? (\n        <div>Loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex align=\"center\">\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    <EditDeletePostButtons id={p.id} creatorId={p.creator.id} />\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variables.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              });\n            }}\n            isLoading={fetching}\n            m=\"auto\"\n            my={8}\n          >\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}